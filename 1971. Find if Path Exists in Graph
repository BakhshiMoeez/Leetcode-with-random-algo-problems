bool validPath(int n, vector<vector<int>>& edges, int source, int destination) 
    {
        unordered_map<int, vector<int>> umap;
        int t1 = 0, t2 = 0;
        for(int i = 0; i < edges.size(); i++)
        {
            t1 = edges[i][0];
            t2 = edges[i][1];

            umap[t1].push_back(t2);
            umap[t2].push_back(t1);
        }  

        vector<bool> visited(n+1, false); 

        queue<int> q;
        q.push(source);
        visited[source] = true;

        int val = 0;
        while(!q.empty())
        {
            val = q.front();
            q.pop();
            visited[val] = true;

            vector<int> x = umap[val];
            for(int j = 0; j < x.size(); j++)
            {
                if(visited[x[j]] == false)
                    q.push(x[j]);
            }
        }

        return visited[destination];
    }

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    private int helper(TreeNode root, int max, int[] count) {
        if(root == null) {
            return 0;
        }

        if(root.val >= max) {
            count[0] = count[0] + 1;
        }

        helper(root.left, Math.max(root.val, max), count);
        helper(root.right, Math.max(root.val, max), count);

        return count[0];
    }

    public int goodNodes(TreeNode root) {
        int[] count = new int[1]; 
        return helper(root, root.val, count);
    }
}
